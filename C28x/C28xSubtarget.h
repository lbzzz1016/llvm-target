//===-- C28xSubtarget.h - Define Subtarget for the C28x ----*- C++ -*--===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file declares the C28 specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_C28X_C28XSUBTARGET_H
#define LLVM_LIB_TARGET_C28X_C28XSUBTARGET_H

#include "C28xISelLowering.h"
#include "C28xInstrInfo.h"
#include "C28xRegisterInfo.h"
#include "C28xFrameLowering.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"

#define GET_SUBTARGETINFO_HEADER
#include "C28xGenSubtargetInfo.inc"

namespace llvm {

class C28xSubtarget : public C28xGenSubtargetInfo {
public:
  enum FloatSupport {
    NoFloat, Float32, Float64, SoftLib
  };

private:
  virtual void anchor();
  FloatSupport FloatModel = NoFloat;

  C28xTargetLowering TLInfo;
  C28xInstrInfo InstrInfo;
  C28xFrameLowering FrameLowering;

public:
  C28xSubtarget(const Triple &TT, const StringRef &CPU,
                const StringRef &FS, const TargetMachine &TM);

  // Generated by TableGen, should declared here.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);

  // Parse feature string
  C28xSubtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS);

  const C28xInstrInfo *getInstrInfo() const override {
    return &InstrInfo;
  }
  const C28xRegisterInfo *getRegisterInfo() const override {
    return &getInstrInfo()->getRegisterInfo();
  }
  const C28xTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const TargetFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
};
} // namspace llvm

#endif
